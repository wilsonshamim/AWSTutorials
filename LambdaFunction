How to Create Lambda Function:
1. "Author from scratch"
2. runtimes : Go, Java, nodejs, python, Ruby, .Net
3. Choose Role
4. in the configuration, there are below tabs
  1. Designer
  2. Function Code
  3. environment variables.
  4. tags
  5. basic settings
  6. VPC
  7. Concurrency
  8. Asynchronous invocation
  9. Database proxies (preview)
5. In the function code, we have 3 options.
  1. EDIT code inline.
  2. upload a zip file. use this option when you want to use a modules/libraries. say kafka module in pyhton code to be used.
  3. if the zip file is grater then 10 MB, use upload a file from Amazon s3.



6. What is AWS lambda:  AWS lambda lets you run the code without provisioning or managing servers. we pay for only till the lambda 
funtionis computed. There is no charge if the code isnt running.Lambda takes care of everything required to run and scale your code with 
high availability. You can set up your code to automatically trigger from other AWS services or call it directly from any web or mobile app.
7.  What is serverless computing: Serverless computing allows you to build and run applications and services without thinking about 
servers.With serverless computing, your application still runs on servers, but all the server management is done by AWS. 
At the core of serverless computing is AWS Lambda, which lets you run your code without provisioning or managing servers.
8. Services That Lambda Reads Events From:
Amazon Kinesis
Amazon DynamoDB
Amazon Simple Queue Service

9. Services That Invoke Lambda Functions Synchronously: For synchronous invocation, the other service waits for the response from your 
function and might retry on errors.
Elastic Load Balancing (Application Load Balancer)
Amazon Cognito
Amazon Lex
Amazon Alexa
Amazon API Gateway
Amazon CloudFront (Lambda@Edge)
Amazon Kinesis Data Firehose
AWS Step Functions
Amazon Simple Storage Service Batch

10. For asynchronous invocation, Lambda queues the event before passing it to your function. 
The other service gets a success response as soon as the event is queued and isn't aware of what happens afterwards. 
If an error occurs, Lambda handles retries, and can send failed events to a dead-letter queue that you configure.
Services That Invoke Lambda Functions Asynchronously:
Amazon Simple Storage Service
Amazon Simple Notification Service
Amazon Simple Email Service
AWS CloudFormation
Amazon CloudWatch Logs
Amazon CloudWatch Events
AWS CodeCommit
AWS Config
AWS IoT
AWS IoT Events
AWS CodePipeline

11.  Can I access the infrastructure that AWS Lambda runs on?  No. AWS Lambda operates the compute infrastructure on your behalf, 
allowing it to perform health checks, apply security patches, and do other routine maintenance.

12. How does AWS Lambda isolate my code?
Each AWS Lambda function runs in its own isolated environment, with its own resources and file system view. 
AWS Lambda uses the same techniques as Amazon EC2 to provide security and separation at the infrastructure and execution levels.

13. How does AWS Lambda secure my code?
AWS Lambda stores code in Amazon S3 and encrypts it at rest. AWS Lambda performs additional integrity checks while your code is in use.
14. Will AWS Lambda reuse function instances?
To improve performance, AWS Lambda may choose to retain an instance of your function and reuse it to serve a subsequent request,
rather than creating a new copy.

15.  What if I need scratch space on disk for my AWS Lambda function?
Each Lambda function receives 500MB of non-persistent disk space in its own /tmp directory.
16. Why must AWS Lambda functions be stateless?
Keeping functions stateless enables AWS Lambda to rapidly launch as many copies of the function as needed to scale to the rate of
incoming events. While AWS Lambda’s programming model is stateless,your code can access stateful data by calling other web services,
such as Amazon S3 or Amazon DynamoDB.

17. Can I use threads and processes in my AWS Lambda function code?
Yes. AWS Lambda allows you to use normal language and operating system features, such as creating additional threads and processes.
Resources allocated to the Lambda function, including memory, execution time, disk, and network use, must be shared among all the
threads/processes it uses. You can launch processes using any language supported by Amazon Linux.

18. What restrictions apply to AWS Lambda function code?
Inbound network connections are blocked by AWS Lambda, 
outbound connections only TCP/IP and UDP/IP sockets are supported,
ptrace (debugging) system calls are blocked.
TCP port 25 traffic is also blocked as an anti-spam measure.

19. How do I create an AWS Lambda function using the Lambda CLI?
You can package the code (and any dependent libraries) as a ZIP and upload it using the AWS CLI from your local environment, 
or specify an Amazon S3 location where the ZIP file is located. Uploads must be no larger than 50MB

20. Does AWS Lambda support environment variables? Yes. 
21.Can I store sensitive information in environment variables?
For sensitive information, such as database passwords, we recommend you use client-side encryption using AWS Key Management Service and 
store the resulting values as ciphertext in your environment variable.You will need to include logic in your AWS Lambda function code 
to decrypt these values.
22. Can I share code across functions?
Yes, you can package any code (frameworks, SDKs, libraries, and more) as a Lambda Layer and manage and share them easily across multiple
functions.
23. How do I monitor an AWS Lambda function?
AWS Lambda automatically monitors Lambda functions on your behalf, reporting real-time metrics through Amazon CloudWatch, including 
total requests, account-level and function-level concurrency usage, latency, error rates, and throttled requests.
You can view statistics for each of your Lambda functions via the Amazon CloudWatch console or through the AWS Lambda console. 
24. How do I troubleshoot failures in an AWS Lambda function?
AWS Lambda automatically integrates with Amazon CloudWatch logs, creating a log group for each Lambda function and providing basic
application lifecycle event log entries, including logging the resources consumed for each use of that function.
You can easily insert additional logging statements into your code. You can also call third-party logging APIs in your Lambda function.
25. How do I scale an AWS Lambda function?
You do not have to scale your Lambda functions – AWS Lambda scales them automatically on your behalf. Every time an event notification 
is received for your function, AWS Lambda quickly locates free capacity within its compute fleet and runs your code. 
Since your code is stateless, AWS Lambda can start as many copies of your function as needed without lengthy deployment and configuration
delays. There are no fundamental limits to scaling a function. AWS Lambda will dynamically allocate capacity to match the rate of incoming events.




